AWSTemplateFormatVersion: '2010-09-09'
Description: 'Disaster Recovery POC - S3 Storage Resources'

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name (dev, test, prod)
    AllowedValues:
      - dev
      - test
      - prod
  
  BackupBucketName:
    Type: String
    Description: Name of the S3 bucket for backups (must be globally unique)
    AllowedPattern: '^[a-z0-9][a-z0-9-]*[a-z0-9]$'
    ConstraintDescription: 'Bucket name must be lowercase, contain only letters, numbers, and hyphens'
  
  RetentionYears:
    Type: Number
    Default: 7
    Description: Number of years to retain backups
    MinValue: 1
    MaxValue: 10
  
  BackupUserArn:
    Type: String
    Description: ARN of the IAM user for backup operations
  
  EnableCrossRegionReplication:
    Type: String
    Default: 'false'
    Description: Enable cross-region replication for disaster recovery
    AllowedValues:
      - 'true'
      - 'false'
  
  ReplicationRegion:
    Type: String
    Default: 'us-west-2'
    Description: Target region for cross-region replication (if enabled)

Mappings:
  RetentionMapping:
    Days:
      "1": 365
      "2": 730
      "3": 1095
      "4": 1460
      "5": 1825
      "6": 2190
      "7": 2555
      "8": 2920
      "9": 3285
      "10": 3650

Conditions:
  EnableReplication: !Equals [!Ref EnableCrossRegionReplication, 'true']

Resources:
  # S3 Bucket for disaster recovery backups
  DisasterRecoveryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BackupBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          # Backup files lifecycle
          - Id: 'BackupFilesLifecycle'
            Status: Enabled
            Prefix: 'backups/'
            Transitions:
              # Immediate transition to Deep Archive for cost savings
              - TransitionInDays: 1
                StorageClass: DEEP_ARCHIVE
            ExpirationInDays: !FindInMap [RetentionMapping, Days, !Ref RetentionYears]
            NoncurrentVersionTransitions:
              - TransitionInDays: 1
                StorageClass: DEEP_ARCHIVE
            NoncurrentVersionExpirationInDays: !FindInMap [RetentionMapping, Days, !Ref RetentionYears]
          
          
          # Cleanup incomplete multipart uploads
          - Id: 'IncompleteMultipartUploads'
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
      
      # Configure cross-region replication if enabled
      ReplicationConfiguration: !If
        - EnableReplication
        - Role: !GetAtt CrossRegionReplicationRole.Arn
          Rules:
            - Id: 'CrossRegionBackupReplication'
              Status: Enabled
              Prefix: 'backups/'
              Destination:
                Bucket: !Sub 'arn:aws:s3:::${BackupBucketName}-replica'
                StorageClass: DEEP_ARCHIVE
        - !Ref 'AWS::NoValue'
      
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: DisasterRecoveryBackup
        - Key: CostCenter
          Value: PersonalBackup


  # Bucket policy for backup user access
  DisasterRecoveryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DisasterRecoveryBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Allow backup user full access
          - Sid: 'BackupUserAccess'
            Effect: 'Allow'
            Principal:
              AWS: !Ref BackupUserArn
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
              - 's3:GetBucketVersioning'
              - 's3:ListBucketVersions'
              - 's3:ListBucketMultipartUploads'
            Resource: !Sub '${DisasterRecoveryBucket.Arn}'
          
          - Sid: 'BackupUserObjectAccess'
            Effect: 'Allow'
            Principal:
              AWS: !Ref BackupUserArn
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:DeleteObject'
              - 's3:DeleteObjectVersion'
              - 's3:RestoreObject'
              - 's3:AbortMultipartUpload'
              - 's3:ListMultipartUploadParts'
            Resource: !Sub '${DisasterRecoveryBucket.Arn}/*'
          
          # Deny public access while preserving administrative access
          - Sid: 'DenyPublicAccess'
            Effect: 'Deny'
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${DisasterRecoveryBucket.Arn}'
              - !Sub '${DisasterRecoveryBucket.Arn}/*'
            Condition:
              Bool:
                'aws:PrincipalIsAWSService': 'false'
              StringNotEquals:
                'aws:PrincipalAccount': !Ref 'AWS::AccountId'

  # Cross-region replication role (conditional)
  CrossRegionReplicationRole:
    Type: AWS::IAM::Role
    Condition: EnableReplication
    Properties:
      RoleName: !Sub 'disaster-recovery-replication-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ReplicationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObjectVersionForReplication
                  - s3:GetObjectVersionAcl
                  - s3:GetObjectVersionTagging
                Resource: !Sub '${DisasterRecoveryBucket}/*'
              - Effect: Allow
                Action:
                  - s3:ReplicateObject
                  - s3:ReplicateDelete
                  - s3:ReplicateTags
                Resource: !Sub 'arn:aws:s3:::${BackupBucketName}-replica/*'
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Cross-region destination bucket (conditional)
  CrossRegionReplicationBucket:
    Type: AWS::S3::Bucket
    Condition: EnableReplication
    Properties:
      BucketName: !Sub '${BackupBucketName}-replica'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: 'ReplicatedBackupLifecycle'
            Status: Enabled
            Prefix: 'backups/'
            Transitions:
              - TransitionInDays: 1
                StorageClass: DEEP_ARCHIVE
            ExpirationInDays: !FindInMap [RetentionMapping, Days, !Ref RetentionYears]
            NoncurrentVersionTransitions:
              - TransitionInDays: 1
                StorageClass: DEEP_ARCHIVE
            NoncurrentVersionExpirationInDays: !FindInMap [RetentionMapping, Days, !Ref RetentionYears]
          - Id: 'ReplicatedIncompleteMultipartUploads'
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: DisasterRecoveryReplica
        - Key: CostCenter
          Value: PersonalBackup

  # CloudWatch Log Group for S3 events
  S3EventLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/s3/disaster-recovery-${Environment}'
      RetentionInDays: 90
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  BucketName:
    Description: Name of the disaster recovery S3 bucket
    Value: !Ref DisasterRecoveryBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  
  BucketArn:
    Description: ARN of the disaster recovery S3 bucket
    Value: !GetAtt DisasterRecoveryBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'
  
  BucketDomainName:
    Description: Domain name of the disaster recovery S3 bucket
    Value: !GetAtt DisasterRecoveryBucket.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-BucketDomainName'
  
  ReplicationBucketName:
    Condition: EnableReplication
    Description: Name of the cross-region replication bucket
    Value: !Ref CrossRegionReplicationBucket
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationBucketName'
  
  ReplicationBucketArn:
    Condition: EnableReplication
    Description: ARN of the cross-region replication bucket
    Value: !GetAtt CrossRegionReplicationBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationBucketArn'
  
  CrossRegionReplicationEnabled:
    Description: Whether cross-region replication is enabled
    Value: !Ref EnableCrossRegionReplication
    Export:
      Name: !Sub '${AWS::StackName}-CrossRegionReplicationEnabled'
  
