AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Kinesis Data Firehose delivery stream'

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name (dev, test, prod)
    AllowedValues:
      - dev
      - test
      - prod
  
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket for Firehose delivery
    Default: poc2-data-analytics-kt
  
  LambdaFunctionArn:
    Type: String
    Description: ARN of the Lambda function for data transformation
    Default: ''

Resources:
  FirehoseDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonKinesisFirehoseServiceRole'
      Policies:
        - PolicyName: S3DeliveryPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${S3BucketName}'
                  - !Sub 'arn:aws:s3:::${S3BucketName}/*'
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:GetFunctionConfiguration'
                Resource:
                  - !Ref LambdaFunctionArn
                  - !Sub '${LambdaFunctionArn}:*'

  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub 'data-delivery-stream-${Environment}'
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub 'arn:aws:s3:::${S3BucketName}'
        RoleARN: !GetAtt FirehoseDeliveryRole.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        CompressionFormat: UNCOMPRESSED
        Prefix: 'data/'
        ErrorOutputPrefix: 'error/'
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: Lambda
              Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !Ref LambdaFunctionArn
                - ParameterName: BufferSizeInMBs
                  ParameterValue: '1'
                - ParameterName: BufferIntervalInSeconds
                  ParameterValue: '60'
                - ParameterName: NumberOfRetries
                  ParameterValue: '3'
                - ParameterName: RoleArn
                  ParameterValue: !GetAtt FirehoseDeliveryRole.Arn
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Sub '/aws/kinesisfirehose/data-delivery-stream-${Environment}'
          LogStreamName: 'S3Delivery'

Outputs:
  FirehoseDeliveryStreamName:
    Description: Name of the Kinesis Data Firehose delivery stream
    Value: !Ref FirehoseDeliveryStream
    Export:
      Name: !Sub '${AWS::StackName}-FirehoseDeliveryStreamName'
  
  FirehoseDeliveryStreamArn:
    Description: ARN of the Kinesis Data Firehose delivery stream
    Value: !GetAtt FirehoseDeliveryStream.Arn
    Export:
      Name: !Sub '${AWS::StackName}-FirehoseDeliveryStreamArn'
  
  FirehoseDeliveryRoleArn:
    Description: ARN of the IAM role for Kinesis Data Firehose
    Value: !GetAtt FirehoseDeliveryRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-FirehoseDeliveryRoleArn'
